#!/usr/bin/env bash
#subdomain

display_subdomain_info() {
    local domain="$1"
    local subdomain="$2"
    local record_type="$3"
    local destination="$4"
    
    echo "The subdomain $subdomain is a $record_type record and points to $destination"
}

# Check if both domain and subdomain arguments are provided
if [ $# -eq 2 ]; then
    domain="$1"
    subdomain="$2"
    
    # Use dig to fetch DNS information for the specified subdomain
    result=$(dig "$subdomain.$domain" | grep -A1 'ANSWER SECTION:')
    
    # Extract record type and destination IP from the dig output
    record_type=$(echo "$result" | awk '/IN\s+[A-Z]/{print $4}')
    destination=$(echo "$result" | awk '/IN\s+[A-Z]/{print $5}')
    
    # Display subdomain information
    display_subdomain_info "$domain" "$subdomain" "$record_type" "$destination"
else
    # If only domain argument is provided, check information for default subdomains
    domain="$1"
    
    # List of default subdomains to check
    subdomains=("www" "lb-01" "web-01" "web-02")
    
    # Loop through default subdomains and display their information
    for subdomain in "${subdomains[@]}"; do
        # Use dig to fetch DNS information for the subdomain
        result=$(dig "$subdomain.$domain" | grep -A1 'ANSWER SECTION:')
        
        # Extract record type and destination IP from the dig output
        record_type=$(echo "$result" | awk '/IN\s+[A-Z]/{print $4}')
        destination=$(echo "$result" | awk '/IN\s+[A-Z]/{print $5}')
        
        # Display subdomain information
        display_subdomain_info "$domain" "$subdomain" "$record_type" "$destination"
    done
fi
